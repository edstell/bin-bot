// DO NOT EDIT: Client was autogenerated from 'notifier.proto'
package notifierproto

import (
	"context"

	"github.com/edstell/lambda/libraries/rpc"
	"google.golang.org/protobuf/encoding/protojson"
)

type Client interface {
	Notify(context.Context, *NotifyRequest) (*NotifyResponse, error)
}

type client struct {
	notify   rpc.Invoker
}

func NewClient(i rpc.LambdaInvoker, arn string) Client {
	return &client{
		notify:   rpc.Client(i, arn, "Notify"),
	}
}

func (c *client) Notify(ctx context.Context, req *NotifyRequest) (*NotifyResponse, error) {
	payload, err := protojson.Marshal(req)
	if err != nil {
		return nil, err
	}
	rsp, err := c.notify.Invoke(ctx, payload)
	if err != nil {
		return nil, err
	}
	out := &NotifyResponse{}
	if err := protojson.Unmarshal(rsp, out); err != nil {
		return nil, err
	}
	return out, nil
}
